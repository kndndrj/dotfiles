#!/bin/bash

# basic shell script for usb and android mounting
# forked from Luke Smith's dmenumount script

# Globals
GREEN=$'\033[1;32m'
BLUE=$'\e[1;34m'
NC=$'\e[0m'


# getmount <result>
getmount() {
    PS3="${BLUE}Select the mountpoint${NC} (or write manually): "

    # list of predefined mountpoints
    mountpoints="/mnt ~/usbmnt"

    # select the mountpoint or type in your own
    select mountpoint in $(echo $mountpoints); do
        if [ -z "$mountpoint" ]; then
            (echo "$REPLY" | grep -Eq "^[0-9]+$") || mountpoint="$REPLY"
        fi
        [ -n "$mountpoint" ] && break
    done

    # remove trailing slashes
    mountpoint=$(echo "$mountpoint" | sed 's:/*$::')
    mountpoint=$(eval echo "$mountpoint")
    [ -z "$mountpoint" ] && exit 1

    # check if directory is empty
    if [ -n "$(ls -A "$mountpoint" 2>/dev/null)" ]; then
        printf "$mountpoint is not empty. Proceed anyways? [y/N] "
        read answer
        if [ "$answer" != "y" ] && [ "$answer" != "Y" ]; then
            exit 0
        fi
    fi

    # Dir not found handler
    if [ ! -d "$mountpoint" ]; then
        printf "$mountpoint does not exist. Create it? [y/N] "
        read answer
        if [ "$answer" != "y" ] && [ "$answer" != "Y" ]; then
            exit 1
        fi
        mkdir -p "$mountpoint" || sudo -A mkdir -p "$mountpoint"
    fi

    # return in the variable
    RETURNVALUE="$mountpoint"
}


# mountusb <drive to mount>
mountusb() {
    chosen="$1"

    # mount automatically if in fstab
    sudo -A mount "$chosen" 2>/dev/null && echo "$chosen mounted." && exit 0

    # get the mountpoint
    getmount
    mp="$RETURNVALUE"

    # mount depending on the partition
    partitiontype="$(lsblk -no "fstype" "$chosen")"
    case "$partitiontype" in
        "vfat") sudo -A mount -t vfat "$chosen" "$mp" -o rw,umask=0000;;
        "exfat") sudo -A mount "$chosen" "$mp" -o uid="$(id -u)",gid="$(id -g)";;
        *) sudo -A mount "$chosen" "$mp"; user="$(whoami)"; ug="$(groups | awk '{print $1}')"; sudo -A chown "$user":"$ug" "$mp";;
    esac

    echo
    echo "${GREEN}$chosen${NC} mounted to ${GREEN}$mp${NC}."
    exit 0
}


# mountandroid <number of the device to mount> <device name>
mountandroid() {
    chosen="$1"
    devicename="$2"

    # get the mountpoint
    getmount
    mp="$RETURNVALUE"

    echo "Tap Allow on your phone if it asks for permission and then press enter"
    printf "OK "
    read

    simple-mtpfs -o nonempty -o auto_unmount --device "$chosen" "$mp" || exit 1

    echo
    echo "${GREEN}$devicename${NC} mounted to ${GREEN}$mp${NC}."
    exit 0
}


getdevice() {
    # get android devices and USBs
    androiddrives=$(simple-mtpfs -l 2>/dev/null | awk -F ":" '{ t=$1; $1=""; gsub(/^ +/, "", $0); print $0" ---Android:" t }')
    usbdrives=$(lsblk -rpo "name,type,size,mountpoint" | grep 'part\|rom' | awk '$4==""{printf "%s (%s) ---USB\n",$1,$3}')

    if [ -z "$androiddrives" ] && [ -z "$usbdrives" ]; then
        echo "There are no available devices to mount."
        exit 0
    fi

    PS3="${BLUE}Which drive?${NC}: "

    OIFS=$IFS
    IFS="
"
    # Select the drive from the list
    select drive in $(echo "$usbdrives"; echo "$androiddrives"); do
        [ -n "$drive" ] && break
    done
    IFS=$OIFS

    # return in the variable
    RETURNVALUE="$drive"
}


main() {
    # get the device to mount
    getdevice
    device="$RETURNVALUE"

    # check type of the device and mount accordingly
    tag=$(echo "$device" | awk '{ print $NF }')
    if (echo "$tag" | grep -Eq  "\---USB.*"); then
        device=$(echo "$device" | awk '{ print $1 }')
        mountusb "$device"
    elif (echo "$tag" | grep -Eq  "\---Android.*"); then
        name=$(echo "$device" | awk '{ $NF=""; gsub(/ +$/, "", $0); print }')
        device=$(echo "$device" | awk -F ":" '{ print $NF }')
        mountandroid "$device" "$name"
    fi
}

main
